AC_INIT(configure.in)
AC_PREREQ(2.12)

AM_INIT_AUTOMAKE(clusterlib, `cat ${srcdir}/version-number.txt`)

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AC_PROG_RANLIB

BUILD_PATH="`pwd`"

case "$srcdir" in
..*) SOURCE_PATH=$BUILD_PATH/${srcdir};;
*) SOURCE_PATH=${srcdir};;
esac

AC_SUBST(BUILD_PATH)
AC_SUBST(SOURCE_PATH)

# Establish some basic info about the OS.
os_type="`uname -s`"
osver="`uname -a | sed 's/\.//g' | awk '{print $1$3}'`"

dnl Disable quoting so that the brackets are not stripped from the regex.
changequote(, )dnl
os_version="`uname -r | sed 's/[A-Za-z]//' | awk -F. '{printf("%d%d",$1,$2)}'`"
changequote([, ])dnl

changequote(, )dnl
enviroment_use_ccache="`echo $YST_DEFAULT_CCACHE`"
changequote([, ])dnl
default_with_ccache="no"
if (test $enviroment_use_ccache ) && (test $enviroment_use_ccache = "yes" ); then
   default_with_ccache="yes"
fi

if test $os_type = "Linux"; then
    AR="/usr/bin/ar cru"
    AC_SUBST(AR)
fi

#AC_DEFINE_UNQUOTED($os_type)
#AC_DEFINE_UNQUOTED(OS_$osver)
#AC_DEFINE_UNQUOTED(OS_TYPE, $os_type)
#AC_DEFINE_UNQUOTED(OS_VERSION, $os_version)

OS_TYPE=$os_type
AC_SUBST(OS_TYPE)

if test -z "$enable_release"; then
    build_type="Optimized"
else
    build_type="Debug"
fi

### GCC ###

AC_MSG_CHECKING(whether to use gcc)
AC_ARG_WITH(gcc,
  [  --with-gcc           Use gcc.],
  [ case "${withval}" in
      no)
        ;;
      yes)
        COMPILER="3.4.3"
        CC="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/gcc"
        CXX="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/g++"
        with_gcc="yes"
        compiler_version="_gcc343"
        ;;
      gcc34)
        COMPILER="3.4.3"
        CC="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/gcc"
        CXX="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/g++"
        with_gcc="yes"
        compiler_version="_gcc343"
        ;;
      gcc411)
        COMPILER="4.1.1"
        CC="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/gcc"
        CXX="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/g++"
        with_gcc="yes"
        compiler_version="_gcc411"
        ;;
      *)
        COMPILER="3.4.3"
        CC="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/gcc"
        CXX="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/g++"
        with_gcc="yes"
        compiler_version="_gcc343"
        ;;
    esac ],[
        COMPILER="3.4.3"
        CC="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/gcc"
        CXX="/usr/releng/${RELTOOLS}/gcc/${COMPILER}/bin/g++"
        with_gcc="yes"
        compiler_version="_gcc343"
    ]
)
AC_MSG_RESULT($with_gcc)
AC_MSG_RESULT($withval)
AC_MSG_RESULT($compiler_version)

if eval "test x$with_gcc = xyes"; then
  DEP1=""
  DEP2="#"
else
  DEP1="#"
  DEP2=""
fi

if eval "test x$with_gcc = xyes"; then
  CXXDEP1=""
  CXXDEP2="#"
else
  CXXDEP1="#"
  CXXDEP2=""
fi

AC_SUBST(DEP1)
AC_SUBST(DEP2)
AC_SUBST(CXXDEP1)
AC_SUBST(CXXDEP2)

### Boost ###

BOOST_VERSION="1.33.1"

AC_MSG_CHECKING(location of Boost headers and libraries)
AC_ARG_WITH(boost_root,
  [ --with-boost-root   location of Boost libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-boost-root requires a path argument.)
        ;;
    esac ],
  [
      with_boost_root="/usr/releng/external/boost/$BOOST_VERSION$compiler_version"
  ]
)
AC_MSG_RESULT($with_boost_root)

BOOST_PATH="${with_boost_root}"
BOOST_LIB_PATH="$BOOST_PATH/lib"
BOOST_INCLUDES="$BOOST_PATH/include/boost-`echo "$BOOST_VERSION" | sed -e 's/\./_/g'`"
BOOST_LIB="$BOOST_LIB_PATH/libboost_unit_test_framework-gcc.a $BOOST_LIB_PATH/libboost_regex-gcc.a"

#AC_CHECK_LIB(boost_unit_test_framework-gcc, main, [BOOST="-L${BOOST_LIB_PATH}"],,["-L${BOOST_LIB_PATH}"])
#if test -z "${BOOST}"; then
#  AC_ERROR("... invalid Boost library!")
#fi

AC_SUBST(BOOST)
AC_SUBST(BOOST_PATH)
AC_SUBST(BOOST_LIB_PATH)
AC_SUBST(BOOST_INCLUDES)
AC_SUBST(BOOST_LIB)

### MPICH ###

AC_MSG_CHECKING(location of MPICH headers and libraries)
AC_ARG_WITH(mpich_root,
  [ --with-mpich-root   location of MPICH libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-mpich-root requires a path argument.)
        ;;
    esac ],
  [
      with_mpich_root="/usr/releng/external/mpich2/mpich2-latest"
  ]
)
AC_MSG_RESULT($with_mpich_root)

MPICH_PATH="${with_mpich_root}"
MPICH_LIB_PATH="$MPICH_PATH/install/lib"
MPICH_INCLUDES="$MPICH_PATH/install/include"
MPICH_LIB="$MPICH_LIB_PATH/libmpichcxx.a $MPICH_LIB_PATH/libmpich.a"

AC_CHECK_LIB(mpich, main, [MPICH="-L${MPICH_LIB_PATH} -lmpichcxx -lmpich"],,["-L${MPICH_LIB_PATH}"])
if test -z "${MPICH}"; then
  AC_ERROR("... invalid MPICH library!")
fi

AC_SUBST(MPICH)
AC_SUBST(MPICH_PATH)
AC_SUBST(MPICH_LIB_PATH)
AC_SUBST(MPICH_INCLUDES)
AC_SUBST(MPICH_LIB)

### ZooKeeper ###

ZOOKEEPER_VERSION="3.1.1"

AC_MSG_CHECKING(location of ZooKeeper headers and libraries)
AC_ARG_WITH(zookeeper_root,
  [ --with-zookeeper-root   location of ZooKeeper libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-zookeeper-root requires a path argument.)
        ;;
    esac ],
  [
        with_zookeeper_root="/usr/releng/internal/libzookeeper/$ZOOKEEPER_VERSION$compiler_version"
  ]
)
AC_MSG_RESULT($with_zookeeper_root)

ZOOKEEPER_PATH="${with_zookeeper_root}"
ZOOKEEPER_LIB_PATH="$ZOOKEEPER_PATH/lib"
ZOOKEEPER_INCLUDES="$ZOOKEEPER_PATH/include"
ZOOKEEPER_LIB="$ZOOKEEPER_LIB_PATH/libzookeeper_mt.a"

LD_LIBRARY_PATH="$ZOOKEEPER_LIB_PATH"

AC_CHECK_LIB(zookeeper_mt, main, [ZOOKEEPER="-L${ZOOKEEPER_LIB_PATH} -lzookeeper_mt"],,["-L${ZOOKEEPER_LIB_PATH}"])
if test -z "${ZOOKEEPER}"; then
  AC_ERROR("... invalid zookeeper library!")
fi

AC_SUBST(ZOOKEEPER)
AC_SUBST(ZOOKEEPER_PATH)
AC_SUBST(ZOOKEEPER_LIB_PATH)
AC_SUBST(ZOOKEEPER_INCLUDES)
AC_SUBST(ZOOKEEPER_LIB)

### APR ###

APR_VERSION="1.2.12"

AC_MSG_CHECKING(location of APR headers and libraries)
AC_ARG_WITH(apr_root,
  [ --with-apr-root   location of APR libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-apr-root requires a path argument.)
        ;;
    esac ],
  [
        with_apr_root="/usr/releng/external/apr/$APR_VERSION"
  ]
)
AC_MSG_RESULT($with_apr_root)

APR_PATH="${with_apr_root}"
APR_LIB_PATH="$APR_PATH/lib"
APR_INCLUDES="$APR_PATH/include/apr-1"
APR_LIB="$APR_LIB_PATH/libapr-1.a"

AC_CHECK_LIB(apr-1, main, [APR="-L${APR_LIB_PATH} -lapr-1"],,["-L${APR_LIB_PATH}"])
if test -z "${APR}"; then
  AC_ERROR("... invalid APR library!")
fi

AC_SUBST(APR)
AC_SUBST(APR_PATH)
AC_SUBST(APR_LIB_PATH)
AC_SUBST(APR_INCLUDES)
AC_SUBST(APR_LIB)

### APRUTIL ###

APRUTIL_VERSION=$APR_VERSION

AC_MSG_CHECKING(location of APR utility headers and libraries)
AC_ARG_WITH(aprutil_root,
  [ --with-aprutil-root   location of APR utility libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-aprutil-root requires a path argument.)
        ;;
    esac ],
  [
        with_aprutil_root="/usr/releng/external/apr-util/$APRUTIL_VERSION"
  ]
)
AC_MSG_RESULT($with_aprutil_root)

APRUTIL_PATH="${with_aprutil_root}"
APRUTIL_LIB_PATH="$APRUTIL_PATH/lib"
APRUTIL_INCLUDES="$APRUTIL_PATH/include/apr-1"
APRUTIL_LIB="$APRUTIL_LIB_PATH/libaprutil-1.a"

AC_CHECK_LIB(aprutil-1, main, [APRUTIL="-L${APRUTIL_LIB_PATH} -laprutil-1"],,["-L${APRUTIL_LIB_PATH}"])
if test -z "${APRUTIL}"; then
  AC_ERROR("... invalid APR utility library!")
fi

AC_SUBST(APRUTIL)
AC_SUBST(APRUTIL_PATH)
AC_SUBST(APRUTIL_LIB_PATH)
AC_SUBST(APRUTIL_INCLUDES)
AC_SUBST(APRUTIL_LIB)

### Expat ###

EXPAT_VERSION="1.95.8"

AC_MSG_CHECKING(location of expat headers and libraries)
AC_ARG_WITH(expat_root,
  [ --with-expat-root   location of expat libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-expat-root requires a path argument.)
        ;;
    esac ],
  [
        with_expat_root="/usr/releng/external/expat/$EXPAT_VERSION"
  ]
)
AC_MSG_RESULT($with_expat_root)

EXPAT_PATH="${with_expat_root}"
EXPAT_LIB_PATH="$EXPAT_PATH/lib"
EXPAT_INCLUDES="$EXPAT_PATH/include"
EXPAT_LIB="$EXPAT_LIB_PATH/libexpat.a"

AC_CHECK_LIB(expat, main, [EXPAT="-L${EXPAT_LIB_PATH} -lexpat"],,["-L${EXPAT_LIB_PATH}"])
if test -z "${EXPAT}"; then
  AC_ERROR("... invalid expat library!")
fi

AC_SUBST(EXPAT)
AC_SUBST(EXPAT_PATH)
AC_SUBST(EXPAT_LIB_PATH)
AC_SUBST(EXPAT_INCLUDES)
AC_SUBST(EXPAT_LIB)

### Enable release ###

#AC_MSG_CHECKING([whether to enable release build])
#AC_ARG_ENABLE(release,
#  [  --enable-release      Set for release build.],
#  [ 
#    case "$enableval}" in 
#    no)
#	ink_enable_release="no"
#	;;
#    yes)
#	ink_enable_release="yes"
#        ;;
#    esac ],[
#  ]
#)
#AC_MSG_RESULT($ink_enable_release)

### Default CXXFLAGS ###

if test -z "$enable_release"; then
   BASE_CXXFLAGS="-Wall -Werror -O0 -g -rdynamic"
else
   BASE_CXXFLAGS="-Wall -Werror -O3 -g -rdynamic"
fi
AC_SUBST(BASE_CXXFLAGS)

### log4cxx ###

LOG4CXX_VERSION="0.10.0"

AC_MSG_CHECKING(location of log4cxx headers and libraries)
AC_ARG_WITH(log4cxx_root,
  [ --with-log4cxx-root   location of log4cxx libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-log4cxx-root requires a path argument.)
        ;;
    esac ],
  [
      with_log4cxx_root="/usr/releng/external/log4cxx-$LOG4CXX_VERSION"
  ]
)
AC_MSG_RESULT($with_log4cxx_root)

LOG4CXX_PATH="${with_log4cxx_root}"
LOG4CXX_LIB_PATH="$LOG4CXX_PATH/lib"
LOG4CXX_INCLUDES="$LOG4CXX_PATH/include"
LOG4CXX_LIB="$LOG4CXX_LIB_PATH/liblog4cxx.a"

APR_LIB_PATH="/usr/releng/external/apr-1.2.12/lib"
APR_UTIL_LIB_PATH="/usr/releng/external/apr-util-1.2.12/lib"

AC_CHECK_LIB(log4cxx, main, [LOG4CXX="-L${LOG4CXX_LIB_PATH} -Wl,--whole-archive,-llog4cxx,--no-whole-archive"],,["-L${LOG4CXX_LIB_PATH}"])
if test -z "${LOG4CXX}"; then
  AC_ERROR("... invalid log4cxx library!")
fi

AC_SUBST(LOG4CXX)
AC_SUBST(LOG4CXX_PATH)
AC_SUBST(LOG4CXX_LIB_PATH)
AC_SUBST(LOG4CXX_INCLUDES)
AC_SUBST(LOG4CXX_LIB)
AC_SUBST(APR_LIB_PATH)
AC_SUBST(APR_UTIL_LIB_PATH)

### Cppunit ###

CPPUNIT_VERSION="1.12.0"

AC_MSG_CHECKING(location of cppunit headers and libraries)
AC_ARG_WITH(cppunit_root,
  [ --with-cppunit-root   location of cppunit libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-cppunit-root requires a path argument.)
        ;;
    esac ],
  [
        with_cppunit_root="/usr/releng/external/cppunit/$CPPUNIT_VERSION"
  ]
)
AC_MSG_RESULT($with_cppunit_root)

CPPUNIT_PATH="${with_cppunit_root}"
CPPUNIT_LIB_PATH="$CPPUNIT_PATH/lib"
CPPUNIT_INCLUDES="$CPPUNIT_PATH/include"
CPPUNIT_LIB="$CPPUNIT_LIB_PATH/libcppunit.a"

AM_CONDITIONAL(HAVE_CPPUNIT, test -e "$CPPUNIT_LIB")
if test "$HAVE_CPPUNIT_TRUE" = '#'; then
  AC_ERROR("... invalid cppunit library!")
fi

AC_SUBST(CPPUNIT)
AC_SUBST(CPPUNIT_PATH)
AC_SUBST(CPPUNIT_LIB_PATH)
AC_SUBST(CPPUNIT_INCLUDES)
AC_SUBST(CPPUNIT_LIB)

### Readline ###

AC_MSG_CHECKING(location of readline headers and libraries)
AC_ARG_WITH(readline_root,
  [ --with-readline-root   location of readline libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-readline-root requires a path argument.)
        ;;
    esac ],
  [
        with_readline_root="/usr/"
  ]
)
AC_MSG_RESULT($with_readline_root)

READLINE_PATH="${with_readline_root}"
READLINE_LIB_PATH="$READLINE_PATH/lib"
READLINE_INCLUDES="$READLINE_PATH/include"
READLINE_LIB="$READLINE_LIB_PATH/libreadline.a"

AM_CONDITIONAL(HAVE_READLINE, test -e "$READLINE_LIB")
if test "$HAVE_READLINE_TRUE" = '#'; then
  AC_ERROR("... invalid readline library!")
fi

AC_SUBST(READLINE)
AC_SUBST(READLINE_PATH)
AC_SUBST(READLINE_LIB_PATH)
AC_SUBST(READLINE_INCLUDES)
AC_SUBST(READLINE_LIB)

### Ncurses ###

AC_MSG_CHECKING(location of ncurses headers and libraries)
AC_ARG_WITH(ncurses_root,
  [ --with-ncurses-root   location of ncurses libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-ncurses-root requires a path argument.)
        ;;
    esac ],
  [
        with_ncurses_root="/usr/"
  ]
)
AC_MSG_RESULT($with_ncurses_root)

NCURSES_PATH="${with_ncurses_root}"
NCURSES_LIB_PATH="$NCURSES_PATH/lib"
NCURSES_INCLUDES="$NCURSES_PATH/include"
NCURSES_LIB="$NCURSES_LIB_PATH/libncurses.a"

AM_CONDITIONAL(HAVE_NCURSES, test -e "$NCURSES_LIB")
if test "$HAVE_NCURSES_TRUE" = '#'; then
  AC_ERROR("... invalid ncurses library!")
fi

AC_SUBST(NCURSES)
AC_SUBST(NCURSES_PATH)
AC_SUBST(NCURSES_LIB_PATH)
AC_SUBST(NCURSES_INCLUDES)
AC_SUBST(NCURSES_LIB)

### microhttpd ###

MICROHTTPD_VERSION="0.4.0"

AC_MSG_CHECKING(location of microhttpd headers and libraries)
AC_ARG_WITH(microhttpd_root,
  [ --with-microhttpd-root   location of libmicrohttpd libraries and headers.],
  [ case "${withval}" in
      yes|no)
        AC_ERROR(Option --with-microhttpd-root requires a path argument.)
        ;;
    esac ],
  [
        with_microhttpd_root="/usr/releng/external/libmicrohttpd/$MICROHTTPD_VERSION$compiler_version"
  ]
)
AC_MSG_RESULT($with_microhttpd_root)

MICROHTTPD_PATH="${with_microhttpd_root}"
MICROHTTPD_LIB_PATH="$MICROHTTPD_PATH/lib"
MICROHTTPD_INCLUDES="$MICROHTTPD_PATH/include"
MICROHTTPD_LIB="$MICROHTTPD_LIB_PATH/libmicrohttpd.a"

LD_LIBRARY_PATH="$MICROHTTPD_LIB_PATH"

AC_CHECK_LIB(microhttpd, main, [MICROHTTPD="-L${MICROHTTPD_LIB_PATH} -lmicrohttpd"],,["-L${MICROHTTPD_LIB_PATH}"])
if test -z "${MICROHTTPD}"; then
  AC_ERROR("... invalid libmicrohttpd library!")
fi

AC_SUBST(MICROHTTPD)
AC_SUBST(MICROHTTPD_PATH)
AC_SUBST(MICROHTTPD_LIB_PATH)
AC_SUBST(MICROHTTPD_INCLUDES)
AC_SUBST(MICROHTTPD_LIB)

### BUILDSTAMP ###

BUILDSTAMP_SOURCE="OldBuildStamp.cc"
BUILDSTAMP_OBJECT="`echo $BUILDSTAMP_SOURCE | sed 's/\.cc$/\.o/'`"
MAKE_BUILDSTAMP_SOURCE=\
"echo \"Use NEW_BUILDSTAMP_SOURCE \" > \$(BUILDSTAMP_SOURCE)"
MAKE_BUILDSTAMP_OBJECT=\
"echo \"Use NEW_BUILDSTAMP_SOURCE \" > \$(BUILDSTAMP_OBJECT)"

NEW_BUILDSTAMP_SOURCE="NewBuildStamp.cc"
NEW_BUILDSTAMP_OBJECT="`echo $NEW_BUILDSTAMP_SOURCE | sed 's/\.cc$/\.o/'`"
NEW_BUILDSTAMP_PICOBJECT="`echo $NEW_BUILDSTAMP_SOURCE | sed 's/\.cc$/\.lo/'`"
NEW_MAKE_BUILDSTAMP_SOURCE=\
"rm -f \$(NEW_BUILDSTAMP_SOURCE); echo \"char *gInkBuildStamp = \
\\\"\$(PACKAGE)-\$(VERSION)~\`echo Build:\$\${BUILDNO-***UNOFFICIAL***}\`~\
$build_type~\
\`date '+%Y/%m/%d.%H:%M'\`~\`((cat \$(srcdir)/CVS/Tag 2> /dev/null) \
|| (echo mainline)) | sed 's/^T//'\`~\`whoami\`\\\";\" > \$(NEW_BUILDSTAMP_SOURCE)"

NEW_MAKE_BUILDSTAMP_OBJECT="\$(CXXCOMPILE) -c \$(NEW_BUILDSTAMP_SOURCE)"
NEW_MAKE_BUILDSTAMP_PICOBJECT="\$(CXXCOMPILE) -fPIC -c \$(NEW_BUILDSTAMP_SOURCE)"

AC_SUBST(BUILDSTAMP_SOURCE)
AC_SUBST(BUILDSTAMP_OBJECT)
AC_SUBST(MAKE_BUILDSTAMP_SOURCE)
AC_SUBST(MAKE_BUILDSTAMP_OBJECT)

AC_SUBST(NEW_BUILDSTAMP_SOURCE)
AC_SUBST(NEW_BUILDSTAMP_OBJECT)
AC_SUBST(NEW_BUILDSTAMP_PICOBJECT)
AC_SUBST(NEW_MAKE_BUILDSTAMP_SOURCE)
AC_SUBST(NEW_MAKE_BUILDSTAMP_OBJECT)
#AC_SUBST(NEW_MAKE_BUILDSTAMP_PICOBJECT)

AC_CHECK_LIB(thread, thr_create, LIBTHREAD="-lthread")
AC_SUBST(LIBTHREAD)

AC_CHECK_LIB(pthread, pthread_create, LIBPTHREAD="-lpthread")
AC_SUBST(LIBPTHREAD)

AC_MSG_CHECKING([Which thread package to link with])
if test $os_type = "SunOS" ; then
    LIB_THREAD_OS=$LIBTHREAD
fi
if test $os_type = "Linux" ; then
    LIB_THREAD_OS=$LIBPTHREAD
fi
AC_MSG_RESULT($LIB_THREAD_OS)
AC_SUBST(LIB_THREAD_OS)

AC_MSG_CHECKING([Which kernel statistics library to link with])
if test $os_type = "SunOS" ; then
    LIB_KSTAT_OS="-lkstat"
fi
if test $os_type = "Linux" ; then
    LIB_KSTAT_OS=""
fi
AC_MSG_RESULT($LIB_KSTAT_OS)
AC_SUBST(LIB_KSTAT_OS)

AC_CHECK_LIB(rt, clock_gettime, LIBRT="-lrt")
AC_CHECK_LIB(posix4, clock_gettime, LIBRT="-lposix4")
AC_SUBST(LIBRT)

makefile_inc="$srcdir/Makefile.inc"
AC_SUBST_FILE(makefile_inc)

# Create the necessary directories if they don't exist
if test ! -d docs; then 
   mkdir docs
fi
if test ! -d docs/doxygen-internal; then
   mkdir docs/doxygen-internal
fi
if test ! -d docs/doxygen-user; then
   mkdir docs/doxgyen-user
fi

AC_OUTPUT(
Manifest
Makefile
src/Makefile
src/activenode/Makefile
src/cli/Makefile
src/core/Makefile
src/core/md5/Makefile
src/example/Makefile
src/gui/Makefile
src/gui/src/Makefile
src/gui/unittest/Makefile
src/gui/conf/config.xml
unittests/Makefile
unittests/unittestsHelper.pl
regressions/Regressions.itc
docs/doxygen-internal/doxygenInternalConfig
docs/doxygen-user/doxygenUserConfig
)

# Make the perl script executable
chmod +x unittests/unittestsHelper.pl
